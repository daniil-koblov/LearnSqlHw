1 Задание.

mysql> CREATE DATABASE learn_sql_hw_2;
Query OK, 1 row affected (0.01 sec)

mysql> show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| learn_sql_hw_2     |
| mysql              |
| performance_schema |
| sakila             |
| sys                |
| world              |
+--------------------+
7 rows in set (0.00 sec)
mysql> USE learn_sql_hw_2;
Database changed
mysql> CREATE TABLE sales
    -> (id INT PRIMARY KEY AUTO_INCREMENT,
    -> order_date DATE,
    -> count_product INT
    -> );
Query OK, 0 rows affected (0.09 sec)
mysql> INSERT INTO sales (order_date, count_product)
    -> VALUES
    -> ('2022-01-01', '156'),
    -> ('2022-01-02', '180'),
    -> ('2022-01-03', '21'),
    -> ('2022-01-04', '124'),
    -> ('2022-01-05', '341');
Query OK, 5 rows affected (0.01 sec)
Records: 5  Duplicates: 0  Warnings: 0

mysql> SELECT * FROM sales;
+----+------------+---------------+
| id | order_date | count_product |
+----+------------+---------------+
|  1 | 2022-01-01 |           156 |
|  2 | 2022-01-02 |           180 |
|  3 | 2022-01-03 |            21 |
|  4 | 2022-01-04 |           124 |
|  5 | 2022-01-05 |           341 |
+----+------------+---------------+
5 rows in set (0.00 sec)

2 Задание

mysql> SELECT
    ->     id AS 'id заказа',
    ->     CASE
    ->         WHEN count_product < 100
    ->             THEN 'Маленький заказ'
    ->         WHEN count_product > 100 AND count_product < 300
    ->             THEN 'Средний заказ'
    ->         ELSE 'Большой заказ'
    ->     END AS 'Тип заказа'
    -> FROM SALES;
+-----------------+-------------------------------+
| id заказа       | Тип заказа                    |
+-----------------+-------------------------------+
|               1 | Средний заказ                 |
|               2 | Средний заказ                 |
|               3 | Маленький заказ               |
|               4 | Средний заказ                 |
|               5 | Большой заказ                 |
+-----------------+-------------------------------+
5 rows in set (0.00 sec)

3 Задание

mysql> CREATE TABLE orders
    -> (id INT PRIMARY KEY AUTO_INCREMENT,
    -> employee_id VARCHAR(5),
    -> amount DECIMAL(8,2),
    -> order_status VARCHAR (10)
    -> );
Query OK, 0 rows affected (0.06 sec)

mysql> INSERT INTO orders (employee_id, amount, order_status)
    ->     VALUES
    ->     ('e03', '15.00', 'OPEN'),
    ->     ('e01', '25.50', 'OPEN'),
    ->     ('e05', '100.70', 'CLOSED'),
    ->     ('e02', '22.18', 'OPEN'),
    ->     ('e04', '9.50', 'CANCELLED');
Query OK, 5 rows affected (0.01 sec)
Records: 5  Duplicates: 0  Warnings: 0

mysql> SELECT * FROM orders;
+----+-------------+--------+--------------+
| id | employee_id | amount | order_status |
+----+-------------+--------+--------------+
| 11 | e03         |  15.00 | OPEN         |
| 12 | e01         |  25.50 | OPEN         |
| 13 | e05         | 100.70 | CLOSED       |
| 14 | e02         |  22.18 | OPEN         |
| 15 | e04         |   9.50 | CANCELLED    |
+----+-------------+--------+--------------+
5 rows in set (0.00 sec)
mysql> SELECT
    -> id,
    -> employee_id,
    -> amount,
    -> order_status,
    -> CASE
    ->     WHEN order_status = 'OPEN'
    ->         THEN 'Order is in open state'
    ->     WHEN order_status = 'CLOSED'
    ->         THEN 'Order is closed'
    ->     ELSE 'Order is cancelled'
    -> END AS 'full_order_status'
    -> FROM orders;
+----+-------------+--------+--------------+------------------------+
| id | employee_id | amount | order_status | full_order_status      |
+----+-------------+--------+--------------+------------------------+
| 11 | e03         |  15.00 | OPEN         | Order is in open state |
| 12 | e01         |  25.50 | OPEN         | Order is in open state |
| 13 | e05         | 100.70 | CLOSED       | Order is closed        |
| 14 | e02         |  22.18 | OPEN         | Order is in open state |
| 15 | e04         |   9.50 | CANCELLED    | Order is cancelled     |
+----+-------------+--------+--------------+------------------------+
5 rows in set (0.01 sec)

4 Задание

Null - это специально обозначение отсутствия каких-либо данных.
0 - это целочисленное значение данных, который есть в типах данных "TINYINT", "SMALLINT", "MEDIUMINT", "INT (INTEGER)", "BIGINT".
